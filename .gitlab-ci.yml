image: python:latest

stages:
  - setup
  - build
  - build:examples
  - pkg

cache:
  paths:
    - .oi/
    - .pio/

setup:
  stage: setup
  script:
    - curl -fsSL -o get-platformio.py https://raw.githubusercontent.com/platformio/platformio-core-installer/master/get-platformio.py
    - python3 get-platformio.py
    - /root/.platformio/penv/bin/pio pkg update  
    - rm -rf .oi/bin/
  rules:
    - if: '($CI_PIPELINE_SOURCE == "merge_request_event") &&
    ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" || "develop")'
    - if: '$CI_COMMIT_TAG'
  tags:
    - oi-firmware

.build:
  stage: build
  needs:
    - job: setup
  rules:
    - if: '($CI_PIPELINE_SOURCE == "merge_request_event") && 
      ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" || "develop")'
    - if: '$CI_COMMIT_TAG'
  tags:
    - oi-firmware

build:core:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e core 

build:discrete:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e discrete 

# build:discreteve:
#   extends: .build
#   script:
#     - /root/.platformio/penv/bin/pio run -e discreteve 

build:stepper:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e stepper 

build:stepperve:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e stepperve 

build:mixed:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e mixed 

build:relayhp:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e relayhp 

build:relaylp:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e relaylp 

# build:brushless:
#   extends: .build
#   script:
#     - /root/.platformio/penv/bin/pio run -e brushless 

build:analogls:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e analogls

build:dc:
  extends: .build
  script:
    - /root/.platformio/penv/bin/pio run -e dc 

build:examples:
  stage: build:examples
  needs:
    - job: build:core
  script:
    - |
      find examples/ -name "*.cpp" | while read -r f; do
        echo "Build $f"
        cat $f > main/main.cpp
        /root/.platformio/penv/bin/pio run -e core || { echo "Error: Build failed for $f"; exit 1; }
      done
  after_script:
    - git restore main/main.cpp
    - /root/.platformio/penv/bin/pio run -e core 
  rules:
    - if: '($CI_PIPELINE_SOURCE == "merge_request_event") && 
      ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" || "develop")'
    - if: '$CI_COMMIT_TAG'

pkg:library:
  stage: pkg
  needs:
    - job: build:examples
  before_script:
    - rm -rf .oi/lib/
    - mkdir .oi/lib/
  script:
    - /root/.platformio/penv/bin/pio pkg pack --output=".oi/lib/"
    - mv .oi/lib/ library/
  artifacts:
    name: "library"
    paths:
      - library/
  rules:
    - if: '$CI_COMMIT_TAG'
  tags:
    - oi-firmware

pkg:bin:
  stage: pkg
  needs:
    - job: build:core
    - job: build:discrete
    # - job: build:discreteve
    - job: build:stepper
    - job: build:stepperve
    - job: build:mixed
    - job: build:relayhp
    - job: build:relaylp
    # - job: build:brushless
    - job: build:analogls
    - job: build:dc
  script:
    - mv .oi/bin/ binary/
  artifacts:
    name: "binary"
    paths:
      - binary/
  rules:
    - if: '$CI_COMMIT_TAG'
  tags:
    - oi-firmware
